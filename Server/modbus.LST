C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MODBUS
OBJECT MODULE PLACED IN modbus.OBJ
COMPILER INVOKED BY: E:\Keil2\C51\BIN\C51.EXE modbus.c BROWSE NOAREGS DEBUG OBJECTEXTEND

stmt level    source

   1          #include "main.h"
   2          
   3          //字地址 0 - 255 (只取低8位)
   4          //位地址 0 - 255 (只取低8位)
   5          
   6          /* CRC 高位字节值表 */ 
   7          const uint8 code auchCRCHi[] = { 
   8          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
   9          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  10          0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  11          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 
  12          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  13          0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 
  14          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  15          0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  16          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  17          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 
  18          0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  19          0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 
  20          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  21          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 
  22          0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  23          0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 
  24          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  25          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  26          0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  27          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  28          0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 
  29          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 
  30          0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 0x80, 0x41, 0x00, 0xC1, 
  31          0x81, 0x40, 0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 
  32          0x00, 0xC1, 0x81, 0x40, 0x01, 0xC0, 0x80, 0x41, 0x01, 0xC0, 
  33          0x80, 0x41, 0x00, 0xC1, 0x81, 0x40 
  34          } ; 
  35          /* CRC低位字节值表*/ 
  36          const uint8 code auchCRCLo[] = { 
  37          0x00, 0xC0, 0xC1, 0x01, 0xC3, 0x03, 0x02, 0xC2, 0xC6, 0x06, 
  38          0x07, 0xC7, 0x05, 0xC5, 0xC4, 0x04, 0xCC, 0x0C, 0x0D, 0xCD, 
  39          0x0F, 0xCF, 0xCE, 0x0E, 0x0A, 0xCA, 0xCB, 0x0B, 0xC9, 0x09, 
  40          0x08, 0xC8, 0xD8, 0x18, 0x19, 0xD9, 0x1B, 0xDB, 0xDA, 0x1A, 
  41          0x1E, 0xDE, 0xDF, 0x1F, 0xDD, 0x1D, 0x1C, 0xDC, 0x14, 0xD4, 
  42          0xD5, 0x15, 0xD7, 0x17, 0x16, 0xD6, 0xD2, 0x12, 0x13, 0xD3, 
  43          0x11, 0xD1, 0xD0, 0x10, 0xF0, 0x30, 0x31, 0xF1, 0x33, 0xF3, 
  44          0xF2, 0x32, 0x36, 0xF6, 0xF7, 0x37, 0xF5, 0x35, 0x34, 0xF4, 
  45          0x3C, 0xFC, 0xFD, 0x3D, 0xFF, 0x3F, 0x3E, 0xFE, 0xFA, 0x3A, 
  46          0x3B, 0xFB, 0x39, 0xF9, 0xF8, 0x38, 0x28, 0xE8, 0xE9, 0x29, 
  47          0xEB, 0x2B, 0x2A, 0xEA, 0xEE, 0x2E, 0x2F, 0xEF, 0x2D, 0xED, 
  48          0xEC, 0x2C, 0xE4, 0x24, 0x25, 0xE5, 0x27, 0xE7, 0xE6, 0x26, 
  49          0x22, 0xE2, 0xE3, 0x23, 0xE1, 0x21, 0x20, 0xE0, 0xA0, 0x60, 
  50          0x61, 0xA1, 0x63, 0xA3, 0xA2, 0x62, 0x66, 0xA6, 0xA7, 0x67, 
  51          0xA5, 0x65, 0x64, 0xA4, 0x6C, 0xAC, 0xAD, 0x6D, 0xAF, 0x6F, 
  52          0x6E, 0xAE, 0xAA, 0x6A, 0x6B, 0xAB, 0x69, 0xA9, 0xA8, 0x68, 
  53          0x78, 0xB8, 0xB9, 0x79, 0xBB, 0x7B, 0x7A, 0xBA, 0xBE, 0x7E, 
  54          0x7F, 0xBF, 0x7D, 0xBD, 0xBC, 0x7C, 0xB4, 0x74, 0x75, 0xB5, 
  55          0x77, 0xB7, 0xB6, 0x76, 0x72, 0xB2, 0xB3, 0x73, 0xB1, 0x71, 
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 2   

  56          0x70, 0xB0, 0x50, 0x90, 0x91, 0x51, 0x93, 0x53, 0x52, 0x92, 
  57          0x96, 0x56, 0x57, 0x97, 0x55, 0x95, 0x94, 0x54, 0x9C, 0x5C, 
  58          0x5D, 0x9D, 0x5F, 0x9F, 0x9E, 0x5E, 0x5A, 0x9A, 0x9B, 0x5B, 
  59          0x99, 0x59, 0x58, 0x98, 0x88, 0x48, 0x49, 0x89, 0x4B, 0x8B, 
  60          0x8A, 0x4A, 0x4E, 0x8E, 0x8F, 0x4F, 0x8D, 0x4D, 0x4C, 0x8C, 
  61          0x44, 0x84, 0x85, 0x45, 0x87, 0x47, 0x46, 0x86, 0x82, 0x42, 
  62          0x43, 0x83, 0x41, 0x81, 0x80, 0x40 
  63          } ;
  64          
  65          uint8   testCoil;               //用于测试 位地址1
  66          uint16  testRegister;   //用于测试 字址址16
  67          
  68          uint8   localAddr = 1;  //单片机控制板的地址
  69          uint8   sendCount;              //发送字节个数
  70          uint8   receCount;          //接收到的字节个数
  71          uint8   sendPosi;           //发送位置
  72          uint8   iRecvFlag;
  73          
  74          uint16 crc16(uint8 *puchMsg, uint16 usDataLen) 
  75          { 
  76   1              uint8 uchCRCHi = 0xFF ; /* 高CRC字节初始化 */ 
  77   1              uint8 uchCRCLo = 0xFF ; /* 低CRC 字节初始化 */ 
  78   1              uint32 uIndex ; /* CRC循环中的索引 */ 
  79   1              while (usDataLen--) /* 传输消息缓冲区 */ 
  80   1              { 
  81   2                      uIndex = uchCRCHi ^ *puchMsg++ ; /* 计算CRC */ 
  82   2                      uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ; 
  83   2                      uchCRCLo = auchCRCLo[uIndex] ; 
  84   2              } 
  85   1              return (uchCRCHi << 8 | uchCRCLo) ; 
  86   1      }//uint16 crc16(uint8 *puchMsg, uint16 usDataLen)
  87          
  88          void SetSendFlag(uint8 value)
  89          {
  90   1              uint16 i ;
  91   1              if(value)
  92   1                      b485Send = 0;
  93   1              else
  94   1                      b485Send = 1;   
  95   1              i = 5000;
  96   1              while(i--);
  97   1      }
  98          
  99          
 100          //开始发送
 101          void beginSend(void)
 102          {       
 103   1              //设为发送
 104   1              SetSendFlag(1);
 105   1              
 106   1              sendPosi = 0;
 107   1              if(sendCount > 1)
 108   1                      sendCount--;
 109   1              ACC = sendBuf[0];
 110   1              TB8 = P;
 111   1              SBUF = sendBuf[0];
 112   1      
 113   1      }//void beginSend(void)
 114          
 115          
 116          //读线圈状态
 117          void readCoil(void)
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 3   

 118          {
 119   1              uint8 addr;
 120   1              uint8 tempAddr;
 121   1              uint8 byteCount;
 122   1              uint8 bitCount;
 123   1              uint16 crcData;
 124   1              uint8 position;
 125   1              uint8 i,k;
 126   1              uint8  result;
 127   1              uint16 tempData;
 128   1              uint8  exit = 0;
 129   1              
 130   1              //addr = (receBuf[2]<<8) + receBuf[3];  
 131   1              //tempAddr = addr & 0xfff;
 132   1              addr = receBuf[3];
 133   1              tempAddr = addr;
 134   1      
 135   1              //bitCount = (receBuf[4]<<8) + receBuf[5];      //读取的位个数
 136   1              bitCount = receBuf[5];
 137   1      
 138   1              byteCount = bitCount / 8;                                       //字节个数
 139   1              if(bitCount%8 != 0)
 140   1                      byteCount++;
 141   1                                                                              
 142   1              for(k=0;k<byteCount;k++)
 143   1              {//字节位置
 144   2                      position = k + 3;
 145   2                      sendBuf[position] = 0;
 146   2                      for(i=0;i<8;i++)
 147   2                      {
 148   3                              getCoilVal(tempAddr,&tempData);
 149   3                              
 150   3                              sendBuf[position] |= tempData << i;
 151   3                              tempAddr++;
 152   3                              if(tempAddr >= addr+bitCount)
 153   3                              {       //读完
 154   4                                      exit = 1;
 155   4                                      break;
 156   4                              }       
 157   3                      }
 158   2                      if(exit == 1)
 159   2                              break;
 160   2              }
 161   1              
 162   1              sendBuf[0] = localAddr;
 163   1              sendBuf[1] = 0x01;      
 164   1              sendBuf[2] = byteCount;
 165   1              byteCount += 3;
 166   1              crcData = crc16(sendBuf,byteCount);     
 167   1              sendBuf[byteCount] = crcData >> 8;
 168   1              byteCount++;
 169   1              sendBuf[byteCount] = crcData & 0xff;
 170   1              sendCount = byteCount + 1;
 171   1              
 172   1              beginSend();    
 173   1      }//void readCoil(void) 
*** WARNING C280 IN LINE 126 OF MODBUS.C: 'result': unreferenced local variable
 174          
 175          //读寄存器
 176          void readRegisters(void)
 177          {
 178   1              uint8 addr;
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 4   

 179   1              uint8 tempAddr;
 180   1              uint16 result;
 181   1              uint16 crcData;
 182   1              uint8 readCount;
 183   1              uint8 byteCount;
 184   1              uint8  finsh;   //1完成  0出错
 185   1              uint16 i;
 186   1              uint16 tempData = 0;    
 187   1              
 188   1              //addr = (receBuf[2]<<8) + receBuf[3];
 189   1              //tempAddr = addr & 0xfff;      
 190   1              addr = receBuf[3];
 191   1              tempAddr = addr;
 192   1      
 193   1              //readCount = (receBuf[4]<<8) + receBuf[5];     //要读的个数
 194   1              readCount = receBuf[5];
 195   1      
 196   1              byteCount = readCount * 2;
 197   1              
 198   1              for(i=0;i<byteCount;i+=2,tempAddr++)
 199   1              {
 200   2                      getRegisterVal(tempAddr,&tempData);                             
 201   2                      sendBuf[i+3] = tempData >> 8;                                           
 202   2                      sendBuf[i+4] = tempData & 0xff;                 
 203   2              }
 204   1              
 205   1              sendBuf[0] = localAddr;
 206   1              sendBuf[1] = 3;
 207   1              sendBuf[2] = byteCount;
 208   1              byteCount += 3;
 209   1              crcData = crc16(sendBuf,byteCount);
 210   1              sendBuf[byteCount] = crcData >> 8;
 211   1              byteCount++;
 212   1              sendBuf[byteCount] = crcData & 0xff;
 213   1              
 214   1              sendCount = byteCount + 1;
 215   1              beginSend();
 216   1      }//void readRegisters(void)
*** WARNING C280 IN LINE 180 OF MODBUS.C: 'result': unreferenced local variable
*** WARNING C280 IN LINE 184 OF MODBUS.C: 'finsh': unreferenced local variable
 217          
 218          
 219          //强制单个线圈
 220          void forceSingleCoil(void)
 221          {
 222   1              uint8 addr;
 223   1              uint8 tempAddr;
 224   1              uint16 tempData;
 225   1              uint8  onOff;
 226   1              uint8 i;
 227   1              
 228   1              //addr = (receBuf[2]<<8) + receBuf[3];  
 229   1              //tempAddr = addr & 0xfff;
 230   1              addr = receBuf[3];
 231   1              tempAddr = addr;
 232   1      
 233   1              //onOff = (receBuf[4]<<8) + receBuf[5]; 
 234   1              onOff = receBuf[4];
 235   1              
 236   1              //if(onOff == 0xff00)
 237   1              if(onOff == 0xff)
 238   1              {       //设为ON
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 5   

 239   2                      tempData = 1;
 240   2              } 
 241   1              //else if(onOff == 0x0000)
 242   1              else if(onOff == 0x00)
 243   1              {       //设为OFF
 244   2                      tempData = 0;
 245   2              }
 246   1      
 247   1              setCoilVal(tempAddr,tempData);  
 248   1              
 249   1              for(i=0;i<receCount;i++)
 250   1              {
 251   2                      sendBuf[i] = receBuf[i];
 252   2              }
 253   1              sendCount = receCount;
 254   1              beginSend();    
 255   1      }//void forceSingleCoil(void)
 256          
 257          
 258          //设置多个寄存器
 259          void presetMultipleRegisters(void)
 260          {
 261   1              uint8 addr;
 262   1              uint8 tempAddr;
 263   1              uint8 byteCount;
 264   1              uint8 setCount;
 265   1              uint16 crcData;
 266   1              uint16 tempData;
 267   1              uint8  finsh;   //为1时完成 为0时出错
 268   1              uint8 i;
 269   1              
 270   1              //addr = (receBuf[2]<<8) + receBuf[3];
 271   1              //tempAddr = addr & 0xfff;
 272   1              addr = receBuf[3];
 273   1              tempAddr = addr & 0xff;
 274   1      
 275   1              //setCount = (receBuf[4]<<8) + receBuf[5];
 276   1              setCount = receBuf[5];
 277   1              byteCount = receBuf[6]; 
 278   1              
 279   1              for(i=0;i<setCount;i++,tempAddr++)
 280   1              {
 281   2                      tempData = (receBuf[i*2+7]<<8) + receBuf[i*2+8];
 282   2              
 283   2                      setRegisterVal(tempAddr,tempData);                      
 284   2              }
 285   1              
 286   1              sendBuf[0] = localAddr;
 287   1              sendBuf[1] = 16;
 288   1              sendBuf[2] = addr >> 8;
 289   1              sendBuf[3] = addr & 0xff;
 290   1              sendBuf[4] = setCount >> 8;
 291   1              sendBuf[5] = setCount & 0xff;
 292   1              crcData = crc16(sendBuf,6);
 293   1              sendBuf[6] = crcData >> 8;
 294   1              sendBuf[7] = crcData & 0xff;
 295   1              sendCount = 8;
 296   1              beginSend();    
 297   1      }//void presetMultipleRegisters(void)
*** WARNING C280 IN LINE 267 OF MODBUS.C: 'finsh': unreferenced local variable
 298          
 299          
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 6   

 300          
 301          //检查uart0数据
 302          void checkComm0Modbus(void)
 303          {
 304   1              uint16 crcData;
 305   1              uint16 tempData;
 306   1      
 307   1              if(receCount == 16)
 308   1              {
 309   2                      
 310   2              }
 311   1              
 312   1              return;
 313   1              if(receCount > 4)
 314   1              {
 315   2                      switch(receBuf[1])
 316   2                      {
 317   3                              case 1://读取线圈状态(读取点 16位以内)
 318   3                              case 3://读取保持寄存器(一个或多个)
 319   3                              case 5://强制单个线圈
 320   3                              case 6://设置单个寄存器
 321   3                                              if(receCount >= 8)
 322   3                                              {//接收完成一组数据
 323   4                                                      //应该关闭接收中断
 324   4                                                      
 325   4                                                      if(receBuf[0]==localAddr && checkoutError==0)
 326   4                                                      {
 327   5                                                              crcData = crc16(receBuf,6);
 328   5                                                              if(crcData == receBuf[7]+(receBuf[6]<<8))
 329   5                                                              {//校验正确
 330   6                                                                      if(receBuf[1] == 1)
 331   6                                                                      {//读取线圈状态(读取点 16位以内)
 332   7                                                                              readCoil();                                                             
 333   7                                                                      }
 334   6                                                                      else if(receBuf[1] == 3)
 335   6                                                                      {//读取保持寄存器(一个或多个)
 336   7                                                                              readRegisters();
 337   7                                                                      }
 338   6                                                                      else if(receBuf[1] == 5)
 339   6                                                                      {//强制单个线圈
 340   7                                                                              forceSingleCoil();                                                              
 341   7                                                                      }
 342   6                                                                      else if(receBuf[1] == 6)
 343   6                                                                      {
 344   7                                                                              //presetSingleRegister();                                                               
 345   7                                                                      }
 346   6      
 347   6                                                              }
 348   5                                                      }                                               
 349   4                                                      receCount = 0;  
 350   4                                                      checkoutError = 0;
 351   4                                              }
 352   3                                              break;
 353   3                              
 354   3                              case 15://设置多个线圈
 355   3                                              tempData = receBuf[6]; 
 356   3                                              tempData += 9;  //数据个数
 357   3                                              if(receCount >= tempData)
 358   3                                              {
 359   4                                                      if(receBuf[0]==localAddr && checkoutError==0)
 360   4                                                      {
 361   5                                                              crcData = crc16(receBuf,tempData-2);
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 7   

 362   5                                                              if(crcData == (receBuf[tempData-2]<<8)+ receBuf[tempData-1])
 363   5                                                              {
 364   6                                                                      //forceMultipleCoils();                 
 365   6                                                              }
 366   5                                                      }       
 367   4                                                      receCount = 0;
 368   4                                                      checkoutError = 0;
 369   4                                              }
 370   3                                              break;
 371   3                              
 372   3                              case 16://设置多个寄存器
 373   3                                              tempData = (receBuf[4]<<8) + receBuf[5];
 374   3                                              tempData = tempData * 2;        //数据个数
 375   3                                              tempData += 9;
 376   3                                              if(receCount >= tempData)
 377   3                                              {
 378   4                                                      if(receBuf[0]==localAddr && checkoutError==0)
 379   4                                                      {
 380   5                                                              crcData = crc16(receBuf,tempData-2);
 381   5                                                              if(crcData == (receBuf[tempData-2]<<8)+ receBuf[tempData-1])
 382   5                                                              {
 383   6                                                                      presetMultipleRegisters();                      
 384   6                                                              }
 385   5                                                      }       
 386   4                                                      receCount = 0;
 387   4                                                      checkoutError = 0;
 388   4                                              }
 389   3                                              break;
 390   3                                                                      
 391   3                              default:
 392   3                                              break;                  
 393   3                      }
 394   2              }
 395   1      }//void checkComm0(void)
 396          
 397          //取线圈状态 返回0表示成功
 398          uint16 getCoilVal(uint16 addr,uint16 *tempData)
 399          {
 400   1              uint16 result = 0;
 401   1              uint16 tempAddr;
 402   1              
 403   1              tempAddr = addr & 0xfff;
 404   1              //只取低8位地址
 405   1              switch(tempAddr & 0xff)
 406   1              {
 407   2                      case 0:
 408   2                                      break;
 409   2                      case 1: 
 410   2                                      *tempData = testCoil;
 411   2                                      break;
 412   2                      case 2:         
 413   2                                      break;          
 414   2                      case 3:
 415   2                                      break;          
 416   2                      case 4:
 417   2                                      break;          
 418   2                      case 5:
 419   2                                      break;
 420   2                      case 6:
 421   2                                      break;                  
 422   2                      case 7:
 423   2                                      break;          
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 8   

 424   2                      case 8:
 425   2                                      break;          
 426   2                      case 9:
 427   2                                      break;          
 428   2                      case 10:
 429   2                                      break;
 430   2                      case 11:
 431   2                                      break;
 432   2                      case 12:
 433   2                                      break;
 434   2                      case 13:
 435   2                                      break;
 436   2                      case 14:
 437   2                                      break;
 438   2                      case 15:
 439   2                                      break;
 440   2                      case 16:
 441   2                                      break;                                                                                                          
 442   2                      default:
 443   2                                      break;          
 444   2              }       
 445   1              
 446   1              return result;
 447   1      }//uint16 getCoilVal(uint16 addr,uint16 *data)
 448          
 449          
 450          //设定线圈状态 返回0表示成功
 451          uint16 setCoilVal(uint16 addr,uint16 tempData)
 452          {
 453   1              uint16 result = 0;
 454   1              uint16 tempAddr;
 455   1              
 456   1              tempAddr = addr & 0xfff;
 457   1              
 458   1                      
 459   1              switch(tempAddr & 0xff)
 460   1              {
 461   2                      case 0:
 462   2                                      break;
 463   2                      case 1: 
 464   2                                      testCoil = tempData;
 465   2                                      break;
 466   2                      case 2:         
 467   2                                      break;          
 468   2                      case 3:
 469   2                                      break;          
 470   2                      case 4:
 471   2                                      break;          
 472   2                      case 5:
 473   2                                      break;
 474   2                      case 6:
 475   2                                      break;                  
 476   2                      case 7:
 477   2                                      break;          
 478   2                      case 8:
 479   2                                      break;          
 480   2                      case 9:
 481   2                                      break;          
 482   2                      case 10:
 483   2                                      break;
 484   2                      case 11:
 485   2                                      break;
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 9   

 486   2                      case 12:
 487   2                                      break;
 488   2                      case 13:
 489   2                                      break;
 490   2                      case 14:
 491   2                                      break;
 492   2                      case 15:
 493   2                                      break;
 494   2                      case 16:
 495   2                                      break;                                                                                                          
 496   2                      default:
 497   2                                      break;          
 498   2              }       
 499   1      
 500   1      
 501   1              return result;
 502   1      }//uint16 setCoilVal(uint16 addr,uint16 data)
 503          
 504          //取寄存器值 返回0表示成功
 505          uint16 getRegisterVal(uint16 addr,uint16 *tempData)
 506          {
 507   1              uint16 result = 0;
 508   1              uint16 tempAddr;
 509   1              
 510   1              tempAddr = addr & 0xfff;
 511   1              
 512   1              switch(tempAddr & 0xff)
 513   1              {
 514   2                      case 0:
 515   2                                      break;
 516   2                      case 1: 
 517   2                                      break;
 518   2                      case 2:         
 519   2                                      break;          
 520   2                      case 3:
 521   2                                      break;          
 522   2                      case 4:
 523   2                                      break;          
 524   2                      case 5:
 525   2                                      break;
 526   2                      case 6:
 527   2                                      break;                  
 528   2                      case 7:
 529   2                                      break;          
 530   2                      case 8:
 531   2                                      break;          
 532   2                      case 9:
 533   2                                      break;          
 534   2                      case 10:
 535   2                                      break;
 536   2                      case 11:
 537   2                                      break;
 538   2                      case 12:
 539   2                                      break;
 540   2                      case 13:
 541   2                                      break;
 542   2                      case 14:
 543   2                                      break;
 544   2                      case 15:
 545   2                                      break;
 546   2                      case 16:
 547   2                                      *tempData = testRegister;
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 10  

 548   2                                      break;                                                                                                          
 549   2                      default:
 550   2                                      break;          
 551   2              }
 552   1              
 553   1              return result;
 554   1      }//uint16 getRegisterVal(uint16 addr,uint16 &data)
 555          
 556          //设置寄存器值 返回0表示成功
 557          uint16 setRegisterVal(uint16 addr,uint16 tempData)
 558          {
 559   1              uint16 result = 0;
 560   1              uint16 tempAddr;
 561   1              
 562   1              tempAddr = addr & 0xfff;
 563   1              
 564   1              switch(tempAddr & 0xff)
 565   1              {
 566   2                      case 0:
 567   2                                      break;
 568   2                      case 1: 
 569   2                                      break;
 570   2                      case 2:         
 571   2                                      break;          
 572   2                      case 3:
 573   2                                      break;          
 574   2                      case 4:
 575   2                                      break;          
 576   2                      case 5:
 577   2                                      break;
 578   2                      case 6:
 579   2                                      break;                  
 580   2                      case 7:
 581   2                                      break;          
 582   2                      case 8:
 583   2                                      break;          
 584   2                      case 9:
 585   2                                      break;          
 586   2                      case 10:
 587   2                                      break;
 588   2                      case 11:
 589   2                                      break;
 590   2                      case 12:
 591   2                                      break;
 592   2                      case 13:
 593   2                                      break;
 594   2                      case 14:
 595   2                                      break;
 596   2                      case 15:
 597   2                                      break;
 598   2                      case 16:
 599   2                                      testRegister = tempData;
 600   2                                      break;                                                                                                          
 601   2                      default:
 602   2                                      break;          
 603   2              }
 604   1              
 605   1              return result;
 606   1      }//uint8 setRegisterVal(uint16 addr,uint16 data)


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V7.06   MODBUS                                                                09/06/2016 14:31:39 PAGE 11  

   CODE SIZE        =    709    ----
   CONSTANT SIZE    =    512    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      52
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
